Первые задания будут простые, но в то же время,
я постараюсь давать что-то такое, что будет приближено к реальным проектам.
Вопросы "а как мне узнать длину строки" и им подобные не принимаются - Гугл в помощь.
Вопроы "а как мне лучше сделать: так или вот так?" - годные, пишите в общий чат.

Вброс по терминологии.
Сейчас в компаниях чаще всего работают по методологии Scrum. Это такая система управления задачами.
Если коротко, то вся работа разделяется на составляющие:

 - Project - это, собственно, весь ваш проект, прям весь продукт, который вы продаете.
 - Epic - эпиком называют большой кусок отдельного функционала. Например, при создании своей социальной сети,
я бы выделил эпики вроде "личная страница", "личные сообщения", "стена", "видеозаписи", "личный кабинет" и т.д. Это зачастую совпадает с тем,
что пользователь видит на экране, но не всегда. Эпиком был бы, например, расчет того, что вы любите (по вашим лайкам)
и выдача похожих по содержанию статей вам в ленту.
 - Story - стори - это одна из задач, которые нужно выполнить в рамках реализации Epic'а. Их достаточно много в каждом Epic'е,
например, для "личных сообщений" я бы сделал такие Stories: "вывод списка диалогов", "создание нового диалога",
"удаление старого диалога", "окно диалога", "модальное окно нового сообщения" (открывается с личной страницы человека) и т.д.
 - Subtask - подзадача - именно на них делится Story. Обычно в рамках каждой Story есть 3-5 Subtasks, но может и больше.
Например, для Story "модальное окно нового сообщения" я бы написал такие Subtasks: "Front-End - UI для модалки",
"Back-End - обработать новое сообщение и сохранить в базу данных", "Database - сохранить сообщение". В идеале это
должно быть очень маленьким и понятным действием, которое легко проверить.

В итоге какая-то такая схема:
Project
--Epic
----Story
------Subtask
------Subtask
----Story
------Subtask
----Story
------Subtask
--Epic
...


Окей, в нашем случае:
Project - научиться программировать
Epics:
  - HTML
  - CSS
  - JS
  - React
  - Redux

Будем считать, что прогресс по первым двум эпикам у нас уже есть. Начнем JS.

----------------------------------------------------------------------------
Story-1: научиться писать и использовать функции.

Я разобью это на 4 Sub-tasks:
  Subtask-1. Function creation
  Subtask-2. Strings concatenation
  Subtask-3. Conditional return
  Subtask-4. Main: header creation

Каждая в своем файле. Первые 3 подготовят вас к выполнению Main.
